name: Deploy Monorepo

on:
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install root dependencies
        run: npm install

      - name: Install frontend deps
        working-directory: apps/web
        run: npm install

      - name: Install backend deps
        working-directory: apps/api
        run: npm install

  build-frontend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Build frontend
        working-directory: apps/web
        run: npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: apps/web/dist

  build-backend:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Generate Prisma client
        working-directory: apps/api
        run: npx prisma generate

      - name: Upload backend artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: apps/api

  deploy:
    runs-on: ubuntu-latest
    needs: [build-frontend, build-backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download frontend build
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: apps/web/dist

      - name: Deploy frontend
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          npm install -g vercel
          cd apps/web
          vercel --prod --token $VERCEL_TOKEN

      - name: Deploy backend
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Trigger your backend deploy here"
